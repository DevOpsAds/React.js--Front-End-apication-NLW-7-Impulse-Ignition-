legenda




-Abertura do reposiótio Github

-Criação da pasta local

-Created project with vite

informations:

in link:
https://vitejs.dev/guide/

commands executed:
# yarn
yarn create vite XnameAplicationX --template react-ts
yarn


verifique o arquivo index.html 
em <div id root > 

Limpar para iniciar o projeto deixe apenas os files:
src/:
app.tsx
main.tsx
vite-env.d.ts

va em main.tsx
exlua a import index... 
pronto

app.tsx
function App() {


  return (
    <h1></h1>
  )
}

export {App}


começaremos a definir nosso css que norterá nossa aplication
statos global primeiro

defina o css body

carrege fontes externas 700 e 400

Alterar o app .tsx-VD

altere para sass - instale o sass 
-yarn add sass
pode ser que um erro apareça entao rodeo commando para limpar cache
yarn add dev

cuidar do css global e app
iniciar a criação de componetes

'components'
criar estrutura de pasta e arquivos 


____Analise estrutura de pasta e arquivos

sass: Camel.lower.lowercase
      confection scss. principal 1 paragraph in top e botton and internal conjug: pargraph only top  
pasta na rais lowercase
pasta in folder raiz CamelCase
file CamelCase
file in folder inside folder lowercase
className: Assim como nome className padronizado o formato lowerCammel


cada components contém seu respectivos arquivos tsx e sass


this step was raised is folder :
LoginBox
MessageList
SendMessageForm

next step was raised

index respectively
one for each
e crie um funcão para retornar u 

config components +scss

instalar a bliblioteca de icones react-icons
yarn add react-icons

scss pronto  segue para criação de pasta services
api.ts comunicação com servidor 
inicie o servidor em um terminal









